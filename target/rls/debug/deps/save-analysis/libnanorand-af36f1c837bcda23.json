{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1","program":"C:\\Users\\malique\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","nanorand","--edition=2018","C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"chacha\"","--cfg","feature=\"default\"","--cfg","feature=\"pcg64\"","--cfg","feature=\"std\"","--cfg","feature=\"tls\"","--cfg","feature=\"wyrand\"","-C","metadata=af36f1c837bcda23","-C","extra-filename=-af36f1c837bcda23","--out-dir","c:\\Users\\malique\\important_stuff\\rust\\Project X\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\malique\\important_stuff\\rust\\Project X\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\malique\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\malique\\important_stuff\\rust\\Project X\\target\\rls\\debug\\deps\\libnanorand-af36f1c837bcda23.rmeta"},"prelude":{"crate_id":{"name":"nanorand","disambiguator":[1172061758909446534,1608832625478474090]},"crate_root":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src","external_crates":[{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[1921591330338517602,8002743023817837766]}},{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\gen.rs","num":2,"id":{"name":"core","disambiguator":[3294562336267099064,32966444439847392]}},{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8997478989526601172,15466949633016966289]}},{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2630917957276446109,8658156290826251556]}},{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16592919627580665262,9528133364691589515]}},{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12745094628986209607,10518202857406436678]}},{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12421643217715303902,5448498891032173630]}},{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10471275659107711445,16777480585464664117]}},{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5556840401016198219,10246883469141694681]}},{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5351773000290944944,5461204872568622329]}},{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1406896991597352872,16715998803959789672]}},{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[16017799561494711091,10322761666972095232]}}],"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":0,"byte_end":5439,"line_start":1,"line_end":100,"column_start":1,"column_end":13}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":0,"byte_end":5439,"line_start":1,"line_end":100,"column_start":1,"column_end":13},"name":"","qualname":"::","value":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":24},{"krate":0,"index":32},{"krate":0,"index":55},{"krate":0,"index":196}],"decl_id":null,"docs":" A library meant for fast, random number generation with quick compile time, and minimal dependencies.","sig":null,"attributes":[{"value":"forbid(missing_docs)","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":43,"byte_end":67,"line_start":2,"line_end":2,"column_start":1,"column_end":25}},{"value":"warn(clippy :: perf, clippy :: complexity, clippy :: style, clippy ::\n       correctness, clippy :: missing_const_for_fn)","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":68,"byte_end":183,"line_start":3,"line_end":9,"column_start":1,"column_end":3}},{"value":"/ A library meant for fast, random number generation with quick compile time, and minimal dependencies.","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":185,"byte_end":290,"line_start":11,"line_end":11,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":291,"byte_end":294,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":295,"byte_end":309,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/ ## Generating a number with an initialized RNG","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":310,"byte_end":360,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":361,"byte_end":372,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ use nanorand::{Rng, WyRand};","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":373,"byte_end":405,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":406,"byte_end":409,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let mut rng = WyRand::new();","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":410,"byte_end":442,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ println!(\"Random number: {}\", rng.generate::<u64>());","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":443,"byte_end":500,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":501,"byte_end":508,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ ## Generating a number with a thread-local RNG","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":509,"byte_end":559,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":560,"byte_end":571,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/ use nanorand::Rng;","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":572,"byte_end":594,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":595,"byte_end":598,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut rng = nanorand::tls_rng();","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":599,"byte_end":637,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/ println!(\"Random number: {}\", rng.generate::<u64>());","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":638,"byte_end":695,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":696,"byte_end":703,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ ## Generating a number in a range","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":704,"byte_end":741,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":742,"byte_end":753,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/ use nanorand::{Rng, WyRand};","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":754,"byte_end":786,"line_start":30,"line_end":30,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":787,"byte_end":790,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut rng = WyRand::new();","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":791,"byte_end":823,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/ println!(\"Random number between 1 and 100: {}\", rng.generate_range(1_u64..=100));","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":824,"byte_end":909,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ println!(\"Random number between -100 and 50: {}\", rng.generate_range(-100_i64..=50));","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":910,"byte_end":999,"line_start":34,"line_end":34,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":1000,"byte_end":1007,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ ## Shuffling a Vec","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":1008,"byte_end":1030,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":1031,"byte_end":1042,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ use nanorand::{Rng, WyRand};","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":1043,"byte_end":1075,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":1076,"byte_end":1079,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut rng = WyRand::new();","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":1080,"byte_end":1112,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"/ let mut items = vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10];","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":1113,"byte_end":1169,"line_start":41,"line_end":41,"column_start":1,"column_end":57}},{"value":"/ rng.shuffle(&mut items);","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":1170,"byte_end":1198,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":1199,"byte_end":1206,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":1207,"byte_end":1210,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Why should I use this over...","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":1211,"byte_end":1247,"line_start":45,"line_end":45,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":1248,"byte_end":1251,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ * `rand` - The standard rand crate is a complex beast. It contains unsafe code in the core implementations, and while it has much more options than we do, that's kind of the point. We're straight to the point, while rand is everything and the kitchen sink.","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":1252,"byte_end":1512,"line_start":47,"line_end":47,"column_start":1,"column_end":261}},{"value":"/ * `fastrand`, `oorandom`, `random-fast-rng`, or `randomize` - These are all minimal, zero-dep implementations of the PCG family of RNGs (Pcg32 and Pcg64). While these are decent, they are _much_ slower than wyrand (which beats the speed of these Pcg32 implementations while providing 64 random bits), and do not provide CSPRNGs.","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":1513,"byte_end":1845,"line_start":48,"line_end":48,"column_start":1,"column_end":333}},{"value":"/ * `getrandom` - The getrandom crate just provides OS entropy sources. It is not meant for random number generation. In fact, we provide it as an optional entropy source.","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":1846,"byte_end":2019,"line_start":49,"line_end":49,"column_start":1,"column_end":174}},{"value":"/","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":2020,"byte_end":2023,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ## RNG Implementations","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":2024,"byte_end":2050,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":2051,"byte_end":2054,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ **RNG**|**nanorand type**|**Output Size**|**Cryptographically Secure**|**Speed**<sup>1</sup>|**Notes**|**Original Implementation**","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":2055,"byte_end":2189,"line_start":53,"line_end":53,"column_start":1,"column_end":135}},{"value":"/ :-----:|:-----:|:-----:|:-----:|:-----:|:-----:|:-----:","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":2190,"byte_end":2249,"line_start":54,"line_end":54,"column_start":1,"column_end":60}},{"value":"/ wyrand|[`nanorand::WyRand`](rand/wyrand/struct.WyRand.html), [`nanorand::tls::TlsWyRand`](tls/fn.tls_rng.html)|64 bits (`u64`)|🚫|16.4 GB/s||[https://github.com/lemire/testingRNG/blob/master/source/wyrand.h](https://github.com/lemire/testingRNG/blob/master/source/wyrand.h)","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":2250,"byte_end":2529,"line_start":55,"line_end":55,"column_start":1,"column_end":277}},{"value":"/ Pcg64|[`nanorand::Pcg64`](rand/pcg64/struct.Pcg64.html)|64 bits (`u64`)|🚫|1.6 GB/s||[https://github.com/rkern/pcg64](https://github.com/rkern/pcg64)","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":2530,"byte_end":2685,"line_start":56,"line_end":56,"column_start":1,"column_end":153}},{"value":"/ ChaCha|[`nanorand::ChaCha`](rand/chacha/struct.ChaCha.html)|512 bits (`[u32; 16]`)|✅|204 MB/s (ChaCha8), 79 MB/s (ChaCha20)|Only works in Rust 1.47 or above|[https://cr.yp.to/chacha.html](https://cr.yp.to/chacha.html)","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":2686,"byte_end":2909,"line_start":57,"line_end":57,"column_start":1,"column_end":222}},{"value":"/","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":2910,"byte_end":2913,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ <sup>1. Speed benchmarked on an M1 Macbook Air</sup>","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":2914,"byte_end":2970,"line_start":59,"line_end":59,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":2971,"byte_end":2974,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ## Entropy Sources","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":2975,"byte_end":2997,"line_start":61,"line_end":61,"column_start":1,"column_end":23}},{"value":"/ _Listed in order of priority_","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":2998,"byte_end":3031,"line_start":62,"line_end":62,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":3032,"byte_end":3035,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ * If the `getrandom` feature is enabled, then [`getrandom::getrandom`](https://docs.rs/getrandom/*/getrandom/fn.getrandom.html) will be called.","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":3036,"byte_end":3183,"line_start":64,"line_end":64,"column_start":1,"column_end":148}},{"value":"/ * If the `rdseed` feature is enabled, and is running on an x86(-64) system with the [RDSEED](https://en.wikipedia.org/wiki/RDRAND) instruction, then","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":3184,"byte_end":3336,"line_start":65,"line_end":65,"column_start":1,"column_end":153}},{"value":"/   we will attempt to source as much entropy as possible via our [`rdseed_entropy`](entropy::rdseed_entropy) function","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":3337,"byte_end":3457,"line_start":66,"line_end":66,"column_start":1,"column_end":121}},{"value":"/ * Linux and Android will attempt to use the [`getrandom`](https://man7.org/linux/man-pages/man2/getrandom.2.html) syscall.","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":3458,"byte_end":3584,"line_start":67,"line_end":67,"column_start":1,"column_end":127}},{"value":"/ * macOS and iOS (Darwin-based systems) will use Security.framework's [`SecRandomCopyBytes`](https://developer.apple.com/documentation/security/1399291-secrandomcopybytes).","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":3585,"byte_end":3760,"line_start":68,"line_end":68,"column_start":1,"column_end":176}},{"value":"/ * Windows","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":3761,"byte_end":3774,"line_start":69,"line_end":69,"column_start":1,"column_end":14}},{"value":"/   * If we're targeting UWP, then the [`BCryptGenRandom`](https://docs.microsoft.com/en-us/windows/win32/api/bcrypt/nf-bcrypt-bcryptgenrandom) is used with system-preferred RNG (`BCRYPT_USE_SYSTEM_PREFERRED_RNG`).","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":3775,"byte_end":3991,"line_start":70,"line_end":70,"column_start":1,"column_end":217}},{"value":"/   * Otherwise, we'll use [`RtlGenRandom`](https://docs.microsoft.com/en-us/windows/win32/api/ntsecapi/nf-ntsecapi-rtlgenrandom).","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":3992,"byte_end":4124,"line_start":71,"line_end":71,"column_start":1,"column_end":133}},{"value":"/","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":4125,"byte_end":4128,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## Feature Flags","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":4129,"byte_end":4149,"line_start":73,"line_end":73,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":4150,"byte_end":4153,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ * `std` (default) - Enables Rust `std` lib features, such as seeding from OS entropy sources.","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":4154,"byte_end":4251,"line_start":75,"line_end":75,"column_start":1,"column_end":98}},{"value":"/ * `tls` (default) - Enables a thread-local [`WyRand`](rand/wyrand/struct.WyRand.html) RNG (see below). Requires `tls` to be enabled.","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":4252,"byte_end":4388,"line_start":76,"line_end":76,"column_start":1,"column_end":137}},{"value":"/ * `wyrand` (default) - Enable the [`WyRand`](rand/wyrand/struct.WyRand.html) RNG.","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":4389,"byte_end":4474,"line_start":77,"line_end":77,"column_start":1,"column_end":86}},{"value":"/ * `pcg64` (default) - Enable the [`Pcg64`](rand/pcg64/struct.Pcg64.html)  RNG.","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":4475,"byte_end":4557,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ * `chacha` - Enable the [`ChaCha`](rand/chacha/struct.ChaCha.html) RNG. Requires Rust 1.47 or later.","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":4558,"byte_end":4662,"line_start":79,"line_end":79,"column_start":1,"column_end":105}},{"value":"/ * `rdseed` - On x86 and x86-64 platforms, the `rdseed` intrinsic will be used when OS entropy isn't available.","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":4663,"byte_end":4777,"line_start":80,"line_end":80,"column_start":1,"column_end":115}},{"value":"/ * `zeroize` - Implement the [Zeroize](https://crates.io/crates/zeroize) trait for all RNGs.","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":4778,"byte_end":4873,"line_start":81,"line_end":81,"column_start":1,"column_end":96}},{"value":"/ * `getrandom` - Use the [`getrandom`](https://crates.io/crates/getrandom) crate as an entropy source.","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":4874,"byte_end":4979,"line_start":82,"line_end":82,"column_start":1,"column_end":106}},{"value":"/ Works on most systems, optional due to the fact that it brings in more dependencies.","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\lib.rs","byte_start":4980,"byte_end":5068,"line_start":83,"line_end":83,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\mod.rs","byte_start":21434,"byte_end":21440,"line_start":29,"line_end":29,"column_start":7,"column_end":13},"name":"Output","qualname":"::rand::Rng::Output","value":"type Output: AsRef<[u8]>;","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" The byte output that this RNG emits.\n","sig":null,"attributes":[{"value":"/ The byte output that this RNG emits.","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\mod.rs","byte_start":21387,"byte_end":21427,"line_start":28,"line_end":28,"column_start":2,"column_end":42}}]}],"impls":[{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\wyrand.rs","byte_start":23257,"byte_end":23263,"line_start":19,"line_end":19,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\wyrand.rs","byte_start":23575,"byte_end":23581,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\wyrand.rs","byte_start":23885,"byte_end":23891,"line_start":44,"line_end":44,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\wyrand.rs","byte_start":24759,"byte_end":24765,"line_start":71,"line_end":71,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\wyrand.rs","byte_start":24845,"byte_end":24851,"line_start":77,"line_end":77,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\pcg64.rs","byte_start":25585,"byte_end":25590,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\pcg64.rs","byte_start":26534,"byte_end":26539,"line_start":65,"line_end":65,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\pcg64.rs","byte_start":26868,"byte_end":26873,"line_start":78,"line_end":78,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\pcg64.rs","byte_start":27341,"byte_end":27346,"line_start":98,"line_end":98,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\pcg64.rs","byte_start":27472,"byte_end":27477,"line_start":108,"line_end":108,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\chacha.rs","byte_start":28288,"byte_end":28294,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\chacha.rs","byte_start":28923,"byte_end":28929,"line_start":45,"line_end":45,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\chacha.rs","byte_start":29232,"byte_end":29238,"line_start":56,"line_end":56,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\chacha.rs","byte_start":30384,"byte_end":30390,"line_start":95,"line_end":95,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\chacha.rs","byte_start":30498,"byte_end":30504,"line_start":101,"line_end":101,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\tls.rs","byte_start":30871,"byte_end":30880,"line_start":12,"line_end":12,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\gen.rs","byte_start":17807,"byte_end":17816,"line_start":84,"line_end":84,"column_start":32,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":39},"to":{"krate":0,"index":42}},{"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\wyrand.rs","byte_start":23257,"byte_end":23263,"line_start":19,"line_end":19,"column_start":6,"column_end":12},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":73},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\wyrand.rs","byte_start":23575,"byte_end":23581,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":73},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\wyrand.rs","byte_start":23885,"byte_end":23891,"line_start":44,"line_end":44,"column_start":14,"column_end":20},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":73},"to":{"krate":0,"index":179}},{"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\wyrand.rs","byte_start":24759,"byte_end":24765,"line_start":71,"line_end":71,"column_start":16,"column_end":22},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":73},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\wyrand.rs","byte_start":24845,"byte_end":24851,"line_start":77,"line_end":77,"column_start":18,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":73},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\pcg64.rs","byte_start":25585,"byte_end":25590,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\pcg64.rs","byte_start":26534,"byte_end":26539,"line_start":65,"line_end":65,"column_start":18,"column_end":23},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":102},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\pcg64.rs","byte_start":26868,"byte_end":26873,"line_start":78,"line_end":78,"column_start":14,"column_end":19},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":102},"to":{"krate":0,"index":179}},{"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\pcg64.rs","byte_start":27341,"byte_end":27346,"line_start":98,"line_end":98,"column_start":16,"column_end":21},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":102},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\pcg64.rs","byte_start":27472,"byte_end":27477,"line_start":108,"line_end":108,"column_start":18,"column_end":23},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":102},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\chacha.rs","byte_start":28288,"byte_end":28294,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\chacha.rs","byte_start":28923,"byte_end":28929,"line_start":45,"line_end":45,"column_start":36,"column_end":42},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":141},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\chacha.rs","byte_start":29232,"byte_end":29238,"line_start":56,"line_end":56,"column_start":32,"column_end":38},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":141},"to":{"krate":0,"index":179}},{"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\chacha.rs","byte_start":30384,"byte_end":30390,"line_start":95,"line_end":95,"column_start":34,"column_end":40},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":141},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\chacha.rs","byte_start":30498,"byte_end":30504,"line_start":101,"line_end":101,"column_start":36,"column_end":42},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":141},"to":{"krate":2,"index":6567}},{"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\rand\\mod.rs","byte_start":21378,"byte_end":21383,"line_start":27,"line_end":27,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":1732},"to":{"krate":0,"index":179}},{"span":{"file_name":"C:\\Users\\malique\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\nanorand-0.6.1\\src\\tls.rs","byte_start":30871,"byte_end":30880,"line_start":12,"line_end":12,"column_start":14,"column_end":23},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":313},"to":{"krate":0,"index":179}}]}